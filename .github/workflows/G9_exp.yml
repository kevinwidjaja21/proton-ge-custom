name: G9_exp

on:
  push:
    branches:
      - G9_exp

jobs:
  build-proton-ge:
    runs-on: ubuntu-latest
    steps:
    
      - name: Get branch names
        id: branch-name
        uses: tj-actions/branch-names@v5.1
    
      - name: Clone repo
        run: git clone -b ${{ steps.branch-name.outputs.current_branch }} --jobs 20 --recurse-submodules ${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY} .

      - name: Get Proton Versions
        run: echo "RELEASE_VERSION=$(cat VERSION)" >> $GITHUB_ENV
        
      - name: Display version
        run: echo ${{ env.RELEASE_VERSION }}

      - name: Install dependencies apt
        run: sudo apt update && sudo apt-get install -y ccache fontforge-nox

      - name: apply patches
        run: ./patches/protonprep-valve-staging.sh  || true

      - name: Create dir structure
        run: mkdir build

      - name: Create/Download ccache
        uses: actions/cache@v2
        with:
          path: ~/.ccache
          key: ccache-proton-${{ github.run_id }}
          restore-keys: |
            ccache-proton

      - name: Configure build proton
        working-directory: ./build/
        run: ../configure.sh --build-name="${{ env.RELEASE_VERSION }}" --enable-ccache

      # Build name following convention: Proton-<tag>
      - name: Build proton
        working-directory: ./build/
        run: make dist

      - name: Rename directory
        working-directory: ./build/
        run: mv dist ${{ env.RELEASE_VERSION }}

      - name: Move files to their right folder
        working-directory: ./build/${{ env.RELEASE_VERSION }}/protonfixes/gi
        run: |
          mv cabextract ../files/bin/ && \
          mv libmspack.so.0 ../files/lib64/ && \
          mv libmspack.so.0.1.0 ../files/lib64/ && \
          rm cabextract_1.9-1.debian.tar.xz libmspack_0.10.1-1.debian.tar.xz

      - name: Copy gallium nine pre-compiled file
        run: |
          mkdir ./build/files/lib64/wine/galliumnine/
          mkdir ./build/files/lib/wine/galliumnine/
          cp -f ./gallium_nine_temp/lib64/d3d9-nine.dll.so ./build/files/lib64/wine/galliumnine/d3d9-nine.dll
          cp -f ./gallium_nine_temp/lib32/d3d9-nine.dll.so ./build/files/lib/wine/galliumnine/d3d9-nine.dll
          cp -f ./gallium_nine_temp/bin64/ninewinecfg.exe.so ./build/files/lib64/wine/galliumnine/ninewinecfg.exe
          cp -f ./gallium_nine_temp/bin32/ninewinecfg.exe.so ./build/files/lib/wine/galliumnine/ninewinecfg.exe

      - name: Archive build
        working-directory: ./build/
        run: tar -czvf ${{ env.RELEASE_VERSION }}-G9.tar.gz ${{ env.RELEASE_VERSION }}

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.RELEASE_VERSION }}-G9
          path: build/${{ env.RELEASE_VERSION }}-G9.tar.gz
